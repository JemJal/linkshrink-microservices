# docker-compose.yml
version: '3.8'

services:
  # --- Service Dependencies ---
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port

  redis:
    image: redis:6-alpine
  
  user-db:
    image: postgres:13-alpine
    volumes: [user_db_data:/var/lib/postgresql/data]
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=user_db
  
  link-db:
    image: postgres:13-alpine
    volumes: [link_db_data:/var/lib/postgresql/data]
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=link_db

  # --- Application Services ---
  user-service:
    build: ./user-service
    ports: # <-- ADD THIS SECTION
      - "8001:8000" 
    environment:
      - DATABASE_URL=postgresql://user:password@user-db/user_db
      - JWT_SECRET_KEY=710fc70a238cc61ae2abce051dcabeb6e4b4a6d8c085b2f51ed72dbb1a18c6a1
    depends_on: [user-db]

  link-service:
    build: ./link-service
    ports: # <-- ADD THIS SECTION
      - "8002:8000" 
    environment:
      - DATABASE_URL=postgresql://user:password@link-db/link_db
      - JWT_SECRET_KEY=710fc70a238cc61ae2abce051dcabeb6e4b4a6d8c085b2f51ed72dbb1a18c6a1
    depends_on: [link-db]
  
  redirect-service:
    build: ./redirect-service
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
    depends_on: [redis, rabbitmq]

  analytics-service:
    build: ./analytics-service
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on: [rabbitmq]

  # --- API Gateway ---
  gateway:
    image: nginx:1.21-alpine
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro # Mount config read-only
    ports:
      # This is the single public entry point for our app
      - "8080:80" 
    depends_on:
      - user-service
      - link-service
      - redirect-service

volumes:
  user_db_data:
  link_db_data: