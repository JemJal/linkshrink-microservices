# .github/workflows/deploy.yml

name: Deploy LinkShrink Services

on:
  push:
    branches:
      - main

jobs:
  # New one ->
  build_and_push_images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag_image.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set image tag
        id: tag_image
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build, tag, and push images to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.tag_image.outputs.tag }}
        run: |
          echo "Building user-service..."
          docker build -t $ECR_REGISTRY/user-service:$IMAGE_TAG ./user-service
          docker push $ECR_REGISTRY/user-service:$IMAGE_TAG

          echo "Building link-service..."
          docker build -t $ECR_REGISTRY/link-service:$IMAGE_TAG ./link-service
          docker push $ECR_REGISTRY/link-service:$IMAGE_TAG
          
          # ========================================================
          # === THIS IS THE FIX - ADDING THE REDIRECT-SERVICE
          # ========================================================
          echo "Building redirect-service..."
          docker build -t $ECR_REGISTRY/redirect-service:$IMAGE_TAG ./redirect-service
          docker push $ECR_REGISTRY/redirect-service:$IMAGE_TAG


  deploy_infrastructure:
    name: Deploy Infrastructure with Terraform
    runs-on: ubuntu-latest
    needs: build_and_push_images

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        env:
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_link_db_password: ${{ secrets.TF_VAR_link_db_password }}
          TF_VAR_jwt_secret_key: ${{ secrets.TF_VAR_jwt_secret_key }}
          TF_VAR_mq_password: ${{ secrets.TF_VAR_mq_password }}
        run: |
          terraform apply -auto-approve -var="image_tag=${{ needs.build_and_push_images.outputs.image_tag }}"
        working-directory: ./terraform